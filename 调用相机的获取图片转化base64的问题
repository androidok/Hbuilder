相机拍照获取图片的时候第一次点击的时候base64返回的数据是空的，第二次点击的时候能够正常的更换头像，
这个的问题的解决办法是我们重复调用转化图片为base64的方法

---------------------------------------------------------
//点击相机获取图片
	mui('.mui-table-view').on('tap', '.mui-camera1', function() {
		photoFromCamera();
	});
  
  function photoFromCamera() {
		var camera = plus.camera.getCamera();
		camera.captureImage(function(file) {
			//			console.log("相机调用成功");
			showImage(file, 0);
		}, function(error) {
			plus.nativeUI.toast("读取拍照文件错误：" + e.message);
		}, {
			index: '2'
		});
	}
function showImage(file, flag) {
	plus.io.resolveLocalFileSystemURL(file, function(url) {
		url.file(function(file) {
			console.log(file.size);
			//大于一定的值就压缩
				//var scap = file.size > 512 * 2 ? '20%' : '50%';
				compressImage(url.toLocalURL(), url.name, flag);
			
		});
	});
}
//压缩图片  
function compressImage(url, filename, flag) {
	var name = "_doc/upload/" + filename; //_doc/upload/F_ZDDZZ-1467602809090.jpg  

	//console.log(url);
	plus.zip.compressImage({
			src: url, //src: (String 类型 )压缩转换原始图片的路径  
			dst: name, //压缩转换目标图片的路径  
			quality: 20, //quality: (Number 类型 )压缩图片的质量.取值范围为1-100  
			overwrite: true //overwrite: (Boolean 类型 )覆盖生成新文件  
		},
		function(event) {
			
			//uploadf(event.target,divid);  
			var path = name; //压缩转换目标图片的路径  
			//event.target获取压缩转换后的图片url路  
			//filename图片名称  
			console.log(event.target);
			var	img = document.createElement("img");
			img.src = event.target;
			console.log(img);	
     // ---------------------------------------------------------------------
      //先调用一次转化图片为base64的方法
				getBase64Image(img);
        //等过一段的时间再次的调用转化图片为base64的方法，这样的话图片的更换就能够正常的执行
			setTimeout(function() {
			
			var data = getBase64Image(img); //base64编码
			if(flag == 0) {
				console.log("相机" + data);
				onSuccessfromCamera(data);
			} else if(flag == 1) {
				console.log("相册" + data);
				onsuccessfromAlbum(data);
			}

				
			}, 100);
		//-----------------------------------------------------------------------------	
			
		},
		function(error) {
			plus.nativeUI.toast("压缩图片失败，请稍候再试");
		});
}

function onSuccessfromCamera(imageData) {
	console.log("onSuccessfromCamera"+imageData);
	mui.ajax("http://123.161.210.102:200/index.php/System/ChangeImg/changeHeadImg2", {
		type: "POST",
		//			url: 
		data: {
			"img": imageData,
			"userid": user[0].userid
		},
		dataType: "json",
		timeout: 5000,
		success: function(Json) {

			console.log("Json"+Json);
			if(Json != null) {
//				var head_photo=document.getElementById('head_photo'); 
//				head_photo.src="data:image/jpeg;base64," + imageData;				
				$("#head_photo").attr("src", "data:image/jpeg;base64," + imageData);
//				console.log(imageData);
				generalstorage("headimg", Json);

				new Toast({
					context: $('body'),
					message: "头像更新成功"
				}).show();
			}
		},
		error: function(xHttpRequest, testStatus) {
			console.log("baoo");
			new Toast({
				context: mui('body'),
				message: errorToast
			}).show();
		}
	});
}

//将图片压缩转成base64 
function getBase64Image(img) {
	console.log("img......"+img);
	
	
	var canvas = document.createElement("canvas");
	var width = img.width;
	var height = img.height;
	// calculate the width and height, constraining the proportions 
	if(width > height) {
		if(width > 100) {
			height = Math.round(height *= 100 / width);
			width = 100;
		}
	} else {
		if(height > 100) {
			width = Math.round(width *= 100 / height);
			height = 100;
		}
	}
	canvas.width = width; /*设置新的图片的宽度*/
	canvas.height = height; /*设置新的图片的长度*/
	var ctx = canvas.getContext("2d");
	ctx.drawImage(img, 0, 0, width, height); /*绘图*/
	var dataURL = canvas.toDataURL("image/png", 0.8);
	console.log("getbase64"+dataURL);
	return dataURL.replace("data:image/png;base64,", "");
}  
